[gd_scene load_steps=9 format=2]

[ext_resource path="res://Script's/Vidro.gd" type="Script" id=1]
[ext_resource path="res://Images/mainsprite/Vidro .png" type="Texture" id=2]
[ext_resource path="res://Audio/Sound Effects/Gameplay/Mirror/mirror_ambience_loop.mp3" type="AudioStream" id=3]
[ext_resource path="res://Audio/Sound Effects/Gameplay/Mirror/mirror_collect.mp3" type="AudioStream" id=4]

[sub_resource type="CircleShape2D" id=1]
radius = 17.0

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Vidro:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Vidro:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Vidro:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "VidroPego"
length = 1.94
tracks/0/type = "value"
tracks/0/path = NodePath("Vidro:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 302.6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Vidro:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1e-05, 1e-05 ) ]
}
tracks/2/type = "audio"
tracks/2/path = NodePath("../AudioStreamPlayer2D")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=4]
resource_name = "inicial"
length = 6.85
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Vidro:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 80.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Vidro:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/2/type = "audio"
tracks/2/path = NodePath("../AudioStreamPlayer2D")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 3 )
} ],
"times": PoolRealArray( 0 )
}

[node name="Vidro" type="Node2D"]
script = ExtResource( 1 )

[node name="Area2D" type="Area2D" parent="." groups=["Vidro"]]

[node name="Vidro" type="Sprite" parent="Area2D"]
position = Vector2( 0, 1 )
texture = ExtResource( 2 )
hframes = 9

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
visible = false
shape = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Area2D")
autoplay = "inicial"
anims/RESET = SubResource( 2 )
anims/VidroPego = SubResource( 3 )
anims/inicial = SubResource( 4 )

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
max_distance = 500.0

[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
